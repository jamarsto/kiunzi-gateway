# Build time configuration & dev services configuration
quarkus:
  container-image:
    group: ${docker_group}
    name: ${docker_name}
    password: ${DOCKER_HUB_TOKEN}
    push: ${docker_push}
    registry: ${docker_registry}
    tag: ${docker_tag}
    username: ${docker_username}
  keycloak:
    devservices:
      realm-path: quarkus-realm.json
  kubernetes:
    deploy: ${kubernetes_deploy}
    mounts:
      private-key-volume:
        path: /keyfiles
    name: ${kubernetes_name}
    namespace: ${kubernetes_namespace}
    secret-volumes:
      private-key-volume:
        secret-name: token-service
  jib:
    base-jvm-image: ${jib_base_jvm_image}
    base-registry-username: ${jib_base_registry_username}
    base-registry-password: ${DOCKER_HUB_TOKEN}

# development profile configuration
"%dev":
  quarkus:
    http:
      port: 8081
    oidc:
      client-id: ${CLIENT_ID}
      credentials:
        secret: ${CLIENT_SECRET}
      roles:
        role-claim-path: ${ROLE_CLAIM_PATH}
  smallrye:
    jwt:
      sign:
        key:
          location: tls.key
  gateway:
    api:
      port: 8080
      root: ${API_ROOT}
      ssl:
        enabled: false
    jwt:
      integration:
        subject: ${TOKEN_SUBJECT}
      issuer: ${TOKEN_ISSUER}
      role: ${TOKEN_ROLE}
    type: ${GATEWAY_TYPE}

# production profile configuration
"%prod":
  quarkus:
    http:
      port: 8080
    oidc:
      auth-server-url: ${auth-server-url}
      client-id: ${client-id}
      credentials:
        secret: ${client-secret}
      roles:
        role-claim-path: ${role-claim-path}
  smallrye:
    jwt:
      sign:
        key:
          location: /keyfiles/tls.key
  gateway:
    api:
      port: 8080
      root: ${api-root}
      ssl:
        enabled: false
    jwt:
      integration:
        subject: ${token-subject}
      issuer: ${token-issuer}
      role: ${token-role}
    type: ${gateway-type}
